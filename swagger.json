{
  "swagger" : "2.0",
  "info" : {
    "title" : "Bumbal Client Api",
    "description" : "Bumbal API documentation",
    "contact" : {
      "email" : "gerb@bumbal.eu"
    },
    "license" : {
      "name" : "Private License",
      "url" : "http://bumbal.eu/contact.html"
    },
    "version" : "2.0"
  },
  "basePath" : "/api/v2",
  "schemes" : [ "https" ],
  "paths" : {
    "/activity" : {
      "put" : {
        "tags" : [ "activity" ],
        "summary" : "Retrieve List of Activities",
        "description" : "Retrieve List of Activities",
        "operationId" : "retrieveListActivity",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Activity RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ActivityRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActivityModel"
              },
              "xml" : {
                "name" : "Activities",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "activity" ],
        "summary" : "Create or update an Activity",
        "description" : "Create or update an Activity. If id or links are set in the data, and a corresponding activity\n  *     is found in Bumbal, an update will be performed.",
        "operationId" : "createActivity",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Activity object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ActivityModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/activity/{activityId}" : {
      "get" : {
        "tags" : [ "activity" ],
        "summary" : "Find activity by ID",
        "description" : "Returns a single activity",
        "operationId" : "retrieveActivity",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "ID of activity to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "include_activity_status",
          "in" : "query",
          "description" : "Show the text value of the status",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_activity_type_name",
          "in" : "query",
          "description" : "Show the text value of the activity type",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_activity_meta_data",
          "in" : "query",
          "description" : "Include meta data connected to this Activity",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_address_object",
          "in" : "query",
          "description" : "Include address data",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_time_slots",
          "in" : "query",
          "description" : "Include TimeSlots",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_time_slot_tags",
          "in" : "query",
          "description" : "Include tags from TimeSlots",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_route_info",
          "in" : "query",
          "description" : "Include route data",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_driver_info",
          "in" : "query",
          "description" : "Include driver data",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_activity_communication",
          "in" : "query",
          "description" : "Include Communication Settings",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_activity_links",
          "in" : "query",
          "description" : "Include Link Data",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_package_lines_info",
          "in" : "query",
          "description" : "Include PackageLines",
          "required" : true,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ActivityModel"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Activity not found"
          }
        }
      },
      "put" : {
        "tags" : [ "activity" ],
        "summary" : "Update a activity",
        "description" : "Update a activity",
        "operationId" : "updateActivity",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "ID of activity to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "Activity object that needs to be updated",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ActivityModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "activity" ],
        "summary" : "Delete an activity",
        "description" : "Delete an activity",
        "operationId" : "deleteActivity",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "ID of the activity to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/address-applied/{addressId}" : {
      "get" : {
        "tags" : [ "address-applied" ],
        "summary" : "Retrieve an Applied Address",
        "description" : "Retrieve an Applied Address",
        "operationId" : "retrieveAddressApplied",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "ID of the applied address to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressAppliedModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "address-applied" ],
        "summary" : "Update a Address",
        "description" : "Update an Address",
        "operationId" : "updateAddressApplied",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "ID of address to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/address" : {
      "put" : {
        "tags" : [ "address" ],
        "summary" : "Retrieve List of Addresses",
        "description" : "Retrieve List of Addresses",
        "operationId" : "retrieveListAddress",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Address RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddressRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AddressModel"
              },
              "xml" : {
                "name" : "Addresses",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "address" ],
        "summary" : "Add a new Address",
        "description" : "Add a new Address",
        "operationId" : "createAddress",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Address object that needs to be created",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddressModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/address/{addressId}" : {
      "get" : {
        "tags" : [ "address" ],
        "summary" : "Retrieve a Address",
        "description" : "Retrieve an Address",
        "operationId" : "retrieveAddress",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "ID of address to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "address" ],
        "summary" : "Update a Address",
        "description" : "Update an Address",
        "operationId" : "updateAddress",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "ID of address to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "address" ],
        "summary" : "Delete an Address",
        "description" : "Delete an Address",
        "operationId" : "deleteAddress",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "ID of address to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/assignment" : {
      "put" : {
        "tags" : [ "assignment" ],
        "summary" : "Retrieve List of Assignments",
        "description" : "Retrieve List of Assignments",
        "operationId" : "retrieveListAssignment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Assignment RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AssignmentRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AssignmentModel"
              },
              "xml" : {
                "name" : "Assignments",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "assignment" ],
        "summary" : "Add a new Assignment",
        "description" : "Add a new Assignment",
        "operationId" : "createAssignment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Assignment object that needs to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AssignmentModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/assignment/{assignmentId}" : {
      "get" : {
        "tags" : [ "assignment" ],
        "summary" : "Retrieve a Assignment",
        "description" : "Retrieve an Assignment",
        "operationId" : "retrieveAssignment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "assignmentId",
          "in" : "path",
          "description" : "ID of assignment to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AssignmentModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "assignment" ],
        "summary" : "Update a Assignment",
        "description" : "Update an Assignment",
        "operationId" : "updateAssignment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "assignmentId",
          "in" : "path",
          "description" : "ID of assignment to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "body",
          "in" : "body",
          "description" : "Assignment object that needs to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AssignmentModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "assignment" ],
        "summary" : "Delete an Assignment",
        "description" : "Delete an Assignment",
        "operationId" : "deleteAssignment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "assignmentId",
          "in" : "path",
          "description" : "ID of assignment to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/auto-plan/start" : {
      "post" : {
        "tags" : [ "auto-plan" ],
        "summary" : "Start a Auto Plan Process",
        "description" : "Start a Auto Plan Process",
        "operationId" : "autoPlanStart",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/auto-plan/check-progress/{processUUID}" : {
      "get" : {
        "tags" : [ "auto-plan" ],
        "summary" : "Check Progress on a Auto Plan Process",
        "description" : "Check Progress on a Auto Plan Process",
        "operationId" : "autoPlanCheckProgress",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "processUUID",
          "in" : "path",
          "description" : "UUID of the process to check the progress of",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/auto-plan/finish" : {
      "post" : {
        "tags" : [ "auto-plan" ],
        "summary" : "Finish a Auto Plan Process",
        "description" : "Finish a Auto Plan Process",
        "operationId" : "autoPlanFinish",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/driver" : {
      "put" : {
        "tags" : [ "driver" ],
        "summary" : "Retrieve List of Drivers",
        "description" : "Retrieve List of Drivers",
        "operationId" : "retrieveListDriver",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Driver RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DriverRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DriverModel"
              },
              "xml" : {
                "name" : "Driver",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/equipment" : {
      "put" : {
        "tags" : [ "equipment" ],
        "summary" : "Retrieve List of Equipment",
        "description" : "Retrieve List of Equipment",
        "operationId" : "retrieveListEquipment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Equipment RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EquipmentRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EquipmentModel"
              },
              "xml" : {
                "name" : "Equipmentes",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "equipment" ],
        "summary" : "Add a new Equipment",
        "description" : "Add a new Equipment",
        "operationId" : "createEquipment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Equipment object that needs to be created",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EquipmentModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/equipment/{equipmentId}" : {
      "get" : {
        "tags" : [ "equipment" ],
        "summary" : "Retrieve a Equipment",
        "description" : "Retrieve an Equipment",
        "operationId" : "retrieveEquipment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "equipmentId",
          "in" : "path",
          "description" : "ID of equipment to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EquipmentModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "equipment" ],
        "summary" : "Update a Equipment",
        "description" : "Update an Equipment",
        "operationId" : "updateEquipment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "equipmentId",
          "in" : "path",
          "description" : "ID of equipment to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "equipment" ],
        "summary" : "Delete an Equipment",
        "description" : "Delete an Equipment",
        "operationId" : "deleteEquipment",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "equipmentId",
          "in" : "path",
          "description" : "ID of equipment to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/instant-messaging/list" : {
      "post" : {
        "tags" : [ "instant-messaging" ],
        "summary" : "List conversations",
        "description" : "List conversations",
        "operationId" : "instantMessagingList",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/instant-messaging/post" : {
      "post" : {
        "tags" : [ "instant-messaging" ],
        "summary" : "Post a message to some one",
        "description" : "Post a message to some one",
        "operationId" : "instantMessagingPost",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/instant-messaging/retrieve-conversation" : {
      "post" : {
        "tags" : [ "instant-messaging" ],
        "summary" : "Retrieve Conversation",
        "description" : "Retrieve Conversation",
        "operationId" : "instantMessagingRetrieveConversation",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/party" : {
      "put" : {
        "tags" : [ "party" ],
        "summary" : "Retrieve List of Parties",
        "description" : "Retrieve List of Parties",
        "operationId" : "retrieveListParty",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Party RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PartyRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PartyModel"
              },
              "xml" : {
                "name" : "Parties",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "party" ],
        "summary" : "Add a new Party",
        "description" : "Add a new Party",
        "operationId" : "createParty",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Party object that needs to be created",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PartyModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/party/{partyId}" : {
      "get" : {
        "tags" : [ "party" ],
        "summary" : "Retrieve a Party",
        "description" : "Retrieve an Party",
        "operationId" : "retrieveParty",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "partyId",
          "in" : "path",
          "description" : "ID of party to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PartyModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "party" ],
        "summary" : "Update a Party",
        "description" : "Update an Party",
        "operationId" : "updateParty",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "partyId",
          "in" : "path",
          "description" : "ID of party to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "party" ],
        "summary" : "Delete an Party",
        "description" : "Delete an Party",
        "operationId" : "deleteParty",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "partyId",
          "in" : "path",
          "description" : "ID of party to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/planner/lock-activities" : {
      "post" : {
        "tags" : [ "planner" ],
        "summary" : "Lock Activities on Route",
        "description" : "Lock Activities on Route",
        "operationId" : "plannerLockActivities",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/planner/change-activity-sequence" : {
      "post" : {
        "tags" : [ "planner" ],
        "summary" : "Change Activity Sequence",
        "description" : "Change Activity Sequence",
        "operationId" : "plannerChangeActivitySequence",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/planner/add-activities-to-route" : {
      "post" : {
        "tags" : [ "planner" ],
        "summary" : "Add Activities To Route",
        "description" : "Add Activities To Route",
        "operationId" : "plannerAddActivitiesToRoute",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/planner/remove-activities-from-route" : {
      "post" : {
        "tags" : [ "planner" ],
        "summary" : "Remove Activities From Route",
        "description" : "Remove Activities From Route",
        "operationId" : "plannerRemoveActivitiesFromRoute",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/planner/calculate-drive-time" : {
      "post" : {
        "tags" : [ "planner" ],
        "summary" : "Calculate Drive Time",
        "description" : "Calculate Drive Time",
        "operationId" : "plannerCalculateDriveTime",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/recurrence/{recurrenceId}" : {
      "get" : {
        "tags" : [ "recurrence" ],
        "summary" : "Retrieve a Recurrence",
        "description" : "Retrieve an Recurrence",
        "operationId" : "retrieveRecurrence",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "recurrenceId",
          "in" : "path",
          "description" : "ID of recurrence to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecurrenceModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "recurrence" ],
        "summary" : "Update a Recurrence",
        "description" : "Update an Recurrence",
        "operationId" : "updateRecurrence",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "recurrenceId",
          "in" : "path",
          "description" : "ID of recurrence to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "recurrence" ],
        "summary" : "Delete an Recurrence",
        "description" : "Delete an Recurrence",
        "operationId" : "deleteRecurrence",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "recurrenceId",
          "in" : "path",
          "description" : "ID of recurrence to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/recurrence" : {
      "put" : {
        "tags" : [ "recurrence" ],
        "summary" : "Retrieve List of Recurrences",
        "description" : "Retrieve List of Recurrences",
        "operationId" : "retrieveListRecurrence",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Recurrence RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecurrenceRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecurrenceModel"
              },
              "xml" : {
                "name" : "Recurrences",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/route" : {
      "put" : {
        "tags" : [ "route" ],
        "summary" : "Retrieve List of Routes",
        "description" : "Retrieve List of Routes",
        "operationId" : "retrieveListRoute",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Route RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RouteRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RouteModel"
              },
              "xml" : {
                "name" : "Routes",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "route" ],
        "summary" : "Add a new Route",
        "description" : "Add a new Route",
        "operationId" : "createRoute",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Route object that needs to be created",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RouteModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/route/{routeId}" : {
      "get" : {
        "tags" : [ "route" ],
        "summary" : "Retrieve a Route",
        "description" : "Retrieve an Route",
        "operationId" : "retrieveRoute",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "routeId",
          "in" : "path",
          "description" : "ID of route to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "include_address_info",
          "in" : "query",
          "description" : "Include Address info",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_route_status",
          "in" : "query",
          "description" : "Include Status Name",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_route_tags",
          "in" : "query",
          "description" : "Include Tags",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_driver_info",
          "in" : "query",
          "description" : "Include Driver info",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_equipment_info_car",
          "in" : "query",
          "description" : "Include Equipment info car",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "include_gps_locations",
          "in" : "query",
          "description" : "Include GPS locations",
          "required" : true,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RouteModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "route" ],
        "summary" : "Update a Route",
        "description" : "Update an Route",
        "operationId" : "updateRoute",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "routeId",
          "in" : "path",
          "description" : "ID of route to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "route" ],
        "summary" : "Delete an Route",
        "description" : "Delete an Route",
        "operationId" : "deleteRoute",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "routeId",
          "in" : "path",
          "description" : "ID of route to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cancel_activities",
          "in" : "query",
          "description" : "Cancel activities on Route",
          "required" : true,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/settings/{settingsId}" : {
      "get" : {
        "tags" : [ "settings" ],
        "summary" : "Retrieve a Settings",
        "description" : "Retrieve an Settings",
        "operationId" : "retrieveSettings",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "settingsId",
          "in" : "path",
          "description" : "ID of settings to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SettingsModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "settings" ],
        "summary" : "Update a Settings",
        "description" : "Update a Setting",
        "operationId" : "updateSettings",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "settingsId",
          "in" : "path",
          "description" : "ID of settings to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/settings" : {
      "put" : {
        "tags" : [ "settings" ],
        "summary" : "Retrieve List of Settingss",
        "description" : "Retrieve List of Settingss",
        "operationId" : "retrieveListSettings",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Settings RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SettingsRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SettingsModel"
              },
              "xml" : {
                "name" : "Settingss",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/tags" : {
      "put" : {
        "tags" : [ "tags" ],
        "summary" : "Retrieve List of Tags",
        "description" : "Retrieve List of Tags",
        "operationId" : "retrieveListTags",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Tags RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TagsRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TagModel"
              },
              "xml" : {
                "name" : "Tags",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "post" : {
        "tags" : [ "tags" ],
        "summary" : "Add a new Tag",
        "description" : "Add a new Tag",
        "operationId" : "createTag",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "description" : "Tag object that needs to be created",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TagModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/tags/{tagId}" : {
      "get" : {
        "tags" : [ "tags" ],
        "summary" : "Retrieve a Tag",
        "description" : "Retrieve an Tag",
        "operationId" : "retrieveTag",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "tagId",
          "in" : "path",
          "description" : "ID of tag to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TagModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "tags" ],
        "summary" : "Update a Tag",
        "description" : "Update an Tag",
        "operationId" : "updateTag",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "tagId",
          "in" : "path",
          "description" : "ID of tag to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "tags" ],
        "summary" : "Delete a Tag",
        "description" : "Delete a Tag",
        "operationId" : "deleteTag",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "tagId",
          "in" : "path",
          "description" : "ID of tag to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/track-trace/retrieve-route-status/{routeId}" : {
      "get" : {
        "tags" : [ "track-trace" ],
        "summary" : "Retrieve Route Status",
        "description" : "Retrieve Route Status",
        "operationId" : "retrieveRouteStatus",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "routeId",
          "in" : "path",
          "description" : "ID of the route to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/track-trace/retrieve-activity-status/{activityId}" : {
      "get" : {
        "tags" : [ "track-trace" ],
        "summary" : "Retrieve Activity Status",
        "description" : "Retrieve Activity Status",
        "operationId" : "retrieveActivityStatus",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "ID of the activity to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/users/{usersId}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Retrieve a Users",
        "description" : "Retrieve an Users",
        "operationId" : "retrieveUsers",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "usersId",
          "in" : "path",
          "description" : "ID of users to retrieve",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UsersModel"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Update a Users",
        "description" : "Update a Setting",
        "operationId" : "updateUsers",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "usersId",
          "in" : "path",
          "description" : "ID of users to update",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/users" : {
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Retrieve List of Userss",
        "description" : "Retrieve List of Userss",
        "operationId" : "retrieveListUsers",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "arguments",
          "in" : "body",
          "description" : "Users RetrieveList Arguments",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsersRetrieveListArguments"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UsersModel"
              },
              "xml" : {
                "name" : "Userss",
                "wrapped" : true
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/worker/add-action-to-stack" : {
      "post" : {
        "tags" : [ "worker" ],
        "summary" : "Add Action To Worker Stack",
        "description" : "Add Action To Worker Stack",
        "operationId" : "addActionToWorkerStack",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    }
  },
  "definitions" : {
    "ActivityFiltersModel" : {
      "properties" : {
        "date_time_from" : {
          "description" : "DateTime From",
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "date_time_to" : {
          "description" : "DateTime To",
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "updated_at" : {
          "description" : "Show updated since",
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "status" : {
          "description" : "Activity Status",
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "enum" : [ "activity_new", "activity_accepted", "activity_planned", "activity_in_progress", "activity_executed", "activity_cancelled", "activity_awaiting" ]
        }
      },
      "xml" : {
        "name" : "ActivityFiltersModel"
      }
    },
    "ActivityModel" : {
      "required" : [ "id", "activity_type_id" ],
      "properties" : {
        "id" : {
          "description" : "Unique Identifier",
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true,
          "example" : 23
        },
        "nr" : {
          "description" : "Number of this Activity",
          "type" : "string",
          "example" : "ACT0001"
        },
        "activity_type_name" : {
          "description" : "Type of this Activity",
          "type" : "string",
          "enum" : [ "pickup", "dropoff", "route_start", "route_end", "stop", "combi" ],
          "example" : "pickup"
        },
        "activity_type_id" : {
          "description" : "TypeID of this Activity",
          "type" : "integer",
          "enum" : [ 1, 2, 3, 4, 11, 29 ],
          "example" : 1
        },
        "status_name" : {
          "description" : "Activity Status",
          "type" : "string",
          "enum" : [ "activity_new", "activity_accepted", "activity_planned", "activity_in_progress", "activity_executed", "activity_cancelled", "activity_awaiting" ]
        },
        "instructions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InstructionModel"
          },
          "xml" : {
            "name" : "instruction",
            "wrapped" : true
          }
        },
        "remarks" : {
          "description" : "Remarks about this activity",
          "type" : "string",
          "example" : "Opmerkingen"
        },
        "locked" : {
          "description" : "Activity locked on a Route",
          "type" : "boolean"
        },
        "top_priority" : {
          "description" : "Activity has top priority",
          "type" : "boolean"
        },
        "send_invite" : {
          "description" : "Send invite",
          "type" : "boolean"
        },
        "sequence_nr" : {
          "description" : "Sequence number on Route",
          "type" : "integer",
          "format" : "int64",
          "example" : 23
        },
        "reference" : {
          "description" : "Reference of this activity",
          "type" : "string",
          "example" : "REF0001"
        },
        "date_time_from" : {
          "description" : "Earliest date-time",
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true,
          "example" : "2017-01-22T17:00:00Z"
        },
        "date_time_to" : {
          "description" : "latest date-time",
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true,
          "example" : "2017-01-22T17:00:00Z"
        },
        "duration" : {
          "description" : "Duration of this activity in minutes",
          "type" : "integer",
          "example" : "30"
        },
        "route_nr" : {
          "description" : "Route Number (not unique)",
          "type" : "string",
          "readOnly" : true,
          "example" : "RTE0001"
        },
        "route_name" : {
          "description" : "Route name",
          "type" : "string",
          "readOnly" : true,
          "example" : "Monday Route 1"
        },
        "route_date_time_from" : {
          "description" : "Start date-time of route",
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true,
          "example" : "2017-01-22T17:00:00Z"
        },
        "route_date_time_to" : {
          "description" : "End date-time of route",
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true,
          "example" : "2017-01-22T17:00:00Z"
        },
        "route_earliest_date_time" : {
          "description" : "Earliest date-time of route",
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true,
          "example" : "2017-01-22T17:00:00Z"
        },
        "route_latest_date_time" : {
          "description" : "Latest date-time of route",
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true,
          "example" : "2017-01-22T17:00:00Z"
        },
        "route_status_id" : {
          "description" : "Status ID of this Route",
          "type" : "integer",
          "readOnly" : true,
          "example" : "1"
        },
        "route_nr_of_stops" : {
          "description" : "Number of stops on this route",
          "type" : "integer",
          "readOnly" : true,
          "example" : "6"
        },
        "route_overdue" : {
          "description" : "Route is overdue",
          "type" : "boolean",
          "readOnly" : true,
          "example" : true
        },
        "driver_id" : {
          "description" : "Driver ID connected to this route/activity",
          "type" : "integer",
          "example" : 12
        },
        "driver_first_name" : {
          "description" : "Driver first name",
          "type" : "string",
          "readOnly" : true,
          "example" : "John"
        },
        "driver_last_name" : {
          "description" : "Driver last name",
          "type" : "string",
          "readOnly" : true,
          "example" : "Doe"
        },
        "driver_name_prefix" : {
          "description" : "Driver prefix",
          "type" : "string",
          "readOnly" : true,
          "example" : "Mr."
        },
        "driver_full_name" : {
          "description" : "Driver full name",
          "type" : "string",
          "readOnly" : true,
          "example" : "Mr. John Doe"
        },
        "driver_email" : {
          "description" : "Driver email",
          "type" : "string",
          "readOnly" : true,
          "example" : "john@doe.com"
        },
        "address" : {
          "$ref" : "#/definitions/AddressModel"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TagModel"
          },
          "xml" : {
            "name" : "tags",
            "wrapped" : true
          }
        },
        "package_lines" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PackageLineModel"
          },
          "xml" : {
            "name" : "package_lines",
            "wrapped" : true
          }
        },
        "time_slots" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeSlotModel"
          },
          "xml" : {
            "name" : "time_slots",
            "wrapped" : true
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LinkModel"
          },
          "xml" : {
            "name" : "links",
            "wrapped" : true
          }
        },
        "communication" : {
          "$ref" : "#/definitions/CommunicationModel"
        },
        "meta_data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MetaDataModel"
          },
          "xml" : {
            "name" : "meta_data",
            "wrapped" : true
          }
        }
      },
      "xml" : {
        "name" : "Activity"
      }
    },
    "ActivityOptionsModel" : {
      "properties" : {
        "include_activity_status" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_activity_type_name" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_activity_meta_data" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_address_object" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_time_slots" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_time_slot_tags" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_route_info" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_driver_info" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_activity_communication" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_activity_links" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_package_lines_info" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "ActivityOptionsModel"
      }
    },
    "ActivityRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/ActivityOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/ActivityFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "10"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "20"
        },
        "search_text" : {
          "type" : "string",
          "example" : "zoek tekst"
        }
      },
      "xml" : {
        "name" : "ActivityListArguments"
      }
    },
    "AddressFiltersModel" : {
      "properties" : {
        "address_type_id" : {
          "description" : "Address Types",
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "enum" : [ "ADDRESS_TYPE_ACTIVITY", "ADDRESS_TYPE_DEPOT", "ADDRESS_TYPE_ROUTE" ]
        },
        "address_tags" : {
          "description" : "Address Tags",
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "example" : "XY23"
        }
      },
      "xml" : {
        "name" : "AddressFiltersModel"
      }
    },
    "AddressModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        },
        "name_1" : {
          "type" : "string",
          "example" : "Naamveld #1"
        },
        "name_2" : {
          "type" : "string",
          "example" : "Naamveld #2"
        },
        "street_1" : {
          "type" : "string",
          "example" : "Straatnaam #2"
        },
        "street_2" : {
          "type" : "string",
          "example" : "Straatnaam #2"
        },
        "house_nr" : {
          "type" : "string",
          "example" : "Huisnummer"
        },
        "house_nr_addendum" : {
          "type" : "string",
          "example" : "Huisnummer toevoeging"
        },
        "zipcode" : {
          "type" : "string",
          "example" : "Postcode"
        },
        "city" : {
          "type" : "string",
          "example" : "Woonplaats"
        },
        "state" : {
          "type" : "string",
          "example" : "Provincie"
        },
        "iso_country" : {
          "type" : "string",
          "example" : "ISO Country"
        },
        "email" : {
          "type" : "string",
          "example" : "Email adres"
        },
        "contact_person" : {
          "type" : "string",
          "example" : "Contact Person"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LinkModel"
          },
          "xml" : {
            "name" : "links",
            "wrapped" : true
          }
        },
        "meta_data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MetaDataModel"
          },
          "xml" : {
            "name" : "meta_data",
            "wrapped" : true
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TagModel"
          },
          "xml" : {
            "name" : "tags",
            "wrapped" : true
          }
        }
      },
      "xml" : {
        "name" : "Address"
      }
    },
    "AddressOptionsModel" : {
      "properties" : {
        "include_phone_nrs" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_address_tags" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_party_info" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_address_type_ids" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "AddressOptionsModel"
      }
    },
    "AddressRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/AddressOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/AddressFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "12"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "0"
        },
        "search_text" : {
          "type" : "string",
          "example" : "search text"
        }
      },
      "xml" : {
        "name" : "AddressRetrieveListArguments"
      }
    },
    "AddressAppliedModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        },
        "name_1" : {
          "type" : "string",
          "example" : "Naamveld #1"
        },
        "street_1" : {
          "type" : "string",
          "example" : "Straatnaam #2"
        },
        "street_2" : {
          "type" : "string",
          "example" : "Straatnaam #2"
        },
        "house_nr" : {
          "type" : "string",
          "example" : "Huisnummer"
        },
        "house_nr_addendum" : {
          "type" : "string",
          "example" : "Huisnummer toevoeging"
        },
        "zipcode" : {
          "type" : "string",
          "example" : "Postcode"
        },
        "city" : {
          "type" : "string",
          "example" : "Woonplaats"
        },
        "state" : {
          "type" : "string",
          "example" : "Provincie"
        },
        "iso_country" : {
          "type" : "string",
          "example" : "ISO Country"
        },
        "email" : {
          "type" : "string",
          "example" : "Email adres"
        },
        "contact_person" : {
          "type" : "string",
          "example" : "Contact Person"
        }
      },
      "xml" : {
        "name" : "AddressApplied"
      }
    },
    "AssignmentFiltersModel" : {
      "xml" : {
        "name" : "AddressFiltersModel"
      }
    },
    "AssignmentModel" : {
      "required" : [ "id", "status_id" ],
      "properties" : {
        "id" : {
          "description" : "Unique ID of this Assignment",
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true,
          "example" : "1"
        },
        "status_id" : {
          "description" : "Status ID of this Assignment",
          "type" : "integer",
          "format" : "int64",
          "enum" : [ 13, 14, 19, 30, 40 ],
          "example" : 13
        },
        "nr" : {
          "description" : "Non-Unique number of this Assignment",
          "type" : "string",
          "example" : "ASG0001"
        },
        "reference" : {
          "description" : "Reference text of this Assignment",
          "type" : "string",
          "example" : "REF0001"
        },
        "description" : {
          "description" : "Description text of this Assignment",
          "type" : "string",
          "example" : "free text"
        },
        "remarks" : {
          "description" : "Remarks about this Assignment",
          "type" : "string",
          "example" : "free text"
        },
        "date_time_from" : {
          "description" : "Earliest start time of all Activities is this Assignment",
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "date_time_to" : {
          "description" : "Latest end time of all Activities is this Assignment",
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      },
      "xml" : {
        "name" : "Assignment"
      }
    },
    "AssignmentOptionsModel" : {
      "properties" : {
        "include_phone_nrs" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "AssignmentOptionsModel"
      }
    },
    "AssignmentRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/AssignmentOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/AddressFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "12"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "0"
        },
        "search_text" : {
          "type" : "string",
          "example" : "search text"
        }
      },
      "xml" : {
        "name" : "AssignmentRetrieveListArguments"
      }
    },
    "DriverFiltersModel" : {
      "xml" : {
        "name" : "DriverFiltersModel"
      }
    },
    "DriverModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        }
      },
      "xml" : {
        "name" : "DriverModel"
      }
    },
    "DriverOptionsModel" : {
      "properties" : {
        "include_phone_nrs" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "DriverOptionsModel"
      }
    },
    "DriverRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/DriverOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/DriverFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "12"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "0"
        },
        "search_text" : {
          "type" : "string",
          "example" : "search text"
        }
      },
      "xml" : {
        "name" : "DriverRetrieveListArguments"
      }
    },
    "EquipmentFiltersModel" : {
      "properties" : {
        "date_time_from" : {
          "description" : "DateTime From",
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "date_time_to" : {
          "description" : "DateTime To",
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "updated_at" : {
          "description" : "Show updated since",
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "status" : {
          "description" : "Activity Status",
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "enum" : [ "activity_new", "activity_accepted", "activity_planned", "activity_in_progress", "activity_executed", "activity_cancelled", "activity_awaiting" ]
        }
      },
      "xml" : {
        "name" : "EquipmentFiltersModel"
      }
    },
    "EquipmentModel" : {
      "required" : [ "id", "equipment_type" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        },
        "equipment_type" : {
          "description" : "Equipment Type",
          "type" : "string",
          "enum" : [ "car", "trailer", "other" ]
        },
        "info" : {
          "type" : "string",
          "example" : "Blauwe Truck"
        },
        "registration_nr" : {
          "type" : "string",
          "example" : "AA-BB-01"
        },
        "capacity_volume" : {
          "type" : "number",
          "format" : "float",
          "example" : "124.50"
        },
        "capacity_loading_meter" : {
          "type" : "number",
          "format" : "float",
          "example" : "24.50"
        },
        "capacity_weight" : {
          "type" : "number",
          "format" : "float",
          "example" : "14.50"
        }
      },
      "xml" : {
        "name" : "Equipment"
      }
    },
    "EquipmentOptionsModel" : {
      "properties" : {
        "include_activity_status" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "EquipmentOptionsModel"
      }
    },
    "EquipmentRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/ActivityOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/ActivityFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "10"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "20"
        },
        "search_text" : {
          "type" : "string",
          "example" : "zoek tekst"
        }
      },
      "xml" : {
        "name" : "EquipmentListArguments"
      }
    },
    "ApiResponse" : {
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "additional_data" : {
          "type" : "object"
        }
      },
      "xml" : {
        "name" : "ApiResponse"
      }
    },
    "CommunicationModel" : {
      "properties" : {
        "saywhen" : {
          "description" : "Make use of SayWhen",
          "type" : "boolean",
          "example" : "true"
        },
        "send_invite" : {
          "description" : "Send an invitation to make an appointment",
          "type" : "boolean",
          "example" : "true"
        },
        "send_eta" : {
          "description" : "Send ETA messages",
          "type" : "boolean",
          "example" : "true"
        },
        "email" : {
          "description" : "The email address to which to communicate",
          "type" : "string",
          "example" : "john.doe@bumbal.eu"
        },
        "phone_nr" : {
          "description" : "The phone number to which to communicate",
          "type" : "string",
          "example" : 3.16947582475E11
        }
      },
      "xml" : {
        "name" : "Communication"
      }
    },
    "GPSLocationModel" : {
      "properties" : {
        "longitude" : {
          "type" : "number",
          "format" : "float",
          "example" : "5.123456"
        },
        "altitude" : {
          "type" : "number",
          "format" : "float",
          "example" : "67.123456"
        },
        "latitude" : {
          "type" : "number",
          "format" : "float",
          "example" : "1.2"
        },
        "heading" : {
          "type" : "integer",
          "example" : "61"
        },
        "timestamp" : {
          "type" : "integer",
          "example" : "1484842170000"
        }
      },
      "xml" : {
        "name" : "gps_location",
        "wrapped" : true
      }
    },
    "InstructionModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "description" : "Unique ID",
          "type" : "integer",
          "format" : "int64",
          "example" : "2"
        },
        "content" : {
          "description" : "Instructie voor chauffeur",
          "type" : "string",
          "example" : "Gele pet op"
        }
      },
      "xml" : {
        "name" : "Instruction"
      }
    },
    "LinkModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "description" : "Unique ID",
          "type" : "integer",
          "format" : "int64",
          "example" : "2"
        },
        "link_id" : {
          "description" : "The external Link ID",
          "type" : "string",
          "format" : "int64",
          "example" : "2a9fffc3-c1f0-4e07-abad-bb8fec9eb676"
        },
        "object_type" : {
          "description" : "The object type id which this link is connected to",
          "type" : "integer",
          "format" : "int64",
          "example" : "2"
        },
        "object_id" : {
          "description" : "The object ID which this link is connected to",
          "type" : "integer",
          "format" : "int64",
          "example" : "22"
        },
        "provider_id" : {
          "description" : "The Provider ID which this link is connected to",
          "type" : "integer",
          "format" : "int64",
          "example" : "1"
        },
        "provider_reference" : {
          "description" : "A Provider reference which this link is connected to",
          "type" : "string",
          "format" : "int64",
          "example" : "9ff24054-dcdc-4e7c-825f-204c9e015375"
        },
        "provider_name" : {
          "description" : "The name of the external Provider",
          "type" : "string",
          "format" : "int64",
          "example" : "saywhen"
        }
      },
      "xml" : {
        "name" : "Link"
      }
    },
    "MetaDataModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "description" : "Unique ID",
          "type" : "integer",
          "format" : "int64",
          "example" : "2"
        },
        "name" : {
          "description" : "Name",
          "type" : "string",
          "example" : "key"
        },
        "value" : {
          "description" : "Value",
          "type" : "string",
          "example" : "value"
        }
      },
      "xml" : {
        "name" : "MetaData"
      }
    },
    "PackageLineModel" : {
      "required" : [ "id", "package_type", "nr_of_packages" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        },
        "nr" : {
          "type" : "string",
          "example" : "PCKL0001"
        },
        "package_type" : {
          "description" : "Package Type",
          "type" : "string",
          "enum" : [ "pallet", "box", "general" ]
        },
        "description" : {
          "type" : "string",
          "example" : "Doos Bananen"
        },
        "nr_of_packages" : {
          "type" : "string",
          "format" : "int64",
          "example" : "4"
        },
        "length" : {
          "type" : "number",
          "format" : "float",
          "example" : "4.1"
        },
        "width" : {
          "type" : "number",
          "format" : "float",
          "example" : "2.3"
        },
        "height" : {
          "type" : "number",
          "format" : "float",
          "example" : "5.2"
        },
        "volume" : {
          "type" : "number",
          "format" : "float",
          "example" : "12.5"
        },
        "barcode" : {
          "type" : "string",
          "example" : "15698758"
        },
        "packagevalue" : {
          "type" : "number",
          "format" : "float",
          "example" : "99.95"
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LinkModel"
          },
          "xml" : {
            "name" : "links",
            "wrapped" : true
          }
        }
      },
      "xml" : {
        "name" : "PackageLine"
      }
    },
    "TimeSlotModel" : {
      "required" : [ "id", "activity_id", "time_slot_type" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        },
        "activity_id" : {
          "description" : "Activity ID to which this TimeSlot belongs",
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        },
        "time_slot_type" : {
          "description" : "TimeSlot Type",
          "type" : "string",
          "enum" : [ "first-entry", "planned", "actual" ]
        },
        "date_from" : {
          "type" : "string",
          "format" : "date",
          "example" : "2017-01-22"
        },
        "time_from" : {
          "type" : "string",
          "example" : "15:00:00"
        },
        "date_time_from" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "date_to" : {
          "type" : "string",
          "format" : "date",
          "example" : "2017-01-22"
        },
        "time_to" : {
          "type" : "string",
          "example" : "15:00:00"
        },
        "date_time_to" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "duration" : {
          "description" : "Duration in minutes",
          "type" : "integer",
          "example" : "30"
        },
        "priority" : {
          "description" : "Priority Level",
          "type" : "integer",
          "enum" : [ 1, 2, 3 ]
        }
      },
      "xml" : {
        "name" : "TimeSlot"
      }
    },
    "PartyFiltersModel" : {
      "xml" : {
        "name" : "PartyFiltersModel"
      }
    },
    "PartyModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        }
      },
      "xml" : {
        "name" : "Party"
      }
    },
    "PartyOptionsModel" : {
      "properties" : {
        "include_phone_nrs" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "PartyOptionsModel"
      }
    },
    "PartyRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/PartyOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/PartyFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "12"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "0"
        },
        "search_text" : {
          "type" : "string",
          "example" : "search text"
        }
      },
      "xml" : {
        "name" : "PartyRetrieveListArguments"
      }
    },
    "RecurrenceFiltersModel" : {
      "xml" : {
        "name" : "RecurrenceFiltersModel"
      }
    },
    "RecurrenceModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        }
      },
      "xml" : {
        "name" : "Assignment"
      }
    },
    "RecurrenceOptionsModel" : {
      "properties" : {
        "include_phone_nrs" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "RecurrenceOptionsModel"
      }
    },
    "RecurrenceRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/RecurrenceOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/RecurrenceFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "12"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "0"
        },
        "search_text" : {
          "type" : "string",
          "example" : "search text"
        }
      },
      "xml" : {
        "name" : "RecurrenceRetrieveListArguments"
      }
    },
    "RouteFiltersModel" : {
      "properties" : {
        "date_time_from" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "date_time_to" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "updated_at" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "status" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T15:00:00Z"
        },
        "driver_id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "20"
        }
      },
      "xml" : {
        "name" : "RouteFiltersModel"
      }
    },
    "RouteModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "description" : "Unique Identifier",
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        },
        "nr" : {
          "description" : "Alternative Identifier",
          "type" : "string",
          "example" : "RIT0004"
        },
        "name" : {
          "description" : "Description",
          "type" : "string",
          "example" : "Vrijdag Rit"
        },
        "status" : {
          "description" : "Route Status",
          "type" : "string",
          "enum" : [ "route_planned", "route_in_progress", "route_executed", "route_cancelled" ]
        },
        "nr_of_stops" : {
          "type" : "integer",
          "example" : "3"
        },
        "driver_id" : {
          "type" : "integer",
          "example" : "3"
        },
        "car_id" : {
          "type" : "integer",
          "example" : "3"
        },
        "link_id" : {
          "type" : "string",
          "example" : "XY23"
        },
        "earliest_date_time" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T17:00:00Z"
        },
        "latest_date_time" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-01-22T17:00:00Z"
        },
        "gps_locations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GPSLocationModel"
          },
          "readOnly" : true,
          "xml" : {
            "name" : "gps_locations",
            "wrapped" : true
          }
        }
      },
      "xml" : {
        "name" : "Route"
      }
    },
    "RouteOptionsModel" : {
      "required" : [ "include_address_info" ],
      "properties" : {
        "include_address_info" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_route_status" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_route_tags" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_driver_info" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_equipment_info_car" : {
          "type" : "boolean",
          "example" : "true"
        },
        "include_gps_locations" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "RouteOptionsModel"
      }
    },
    "RouteRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/RouteOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/RouteFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "10"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "20"
        },
        "search_text" : {
          "type" : "string",
          "example" : "zoek tekst"
        },
        "include_activities" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "RouteListArguments"
      }
    },
    "SettingsFiltersModel" : {
      "xml" : {
        "name" : "SettingsFiltersModel"
      }
    },
    "SettingsModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        }
      },
      "xml" : {
        "name" : "SettingsModel"
      }
    },
    "SettingsOptionsModel" : {
      "properties" : {
        "include_phone_nrs" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "SettingsOptionsModel"
      }
    },
    "SettingsRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/SettingsOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/SettingsFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "12"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "0"
        },
        "search_text" : {
          "type" : "string",
          "example" : "search text"
        }
      },
      "xml" : {
        "name" : "SettingsRetrieveListArguments"
      }
    },
    "TagModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        }
      },
      "xml" : {
        "name" : "TagModel"
      }
    },
    "TagsFiltersModel" : {
      "xml" : {
        "name" : "TagsFiltersModel"
      }
    },
    "TagsOptionsModel" : {
      "properties" : {
        "include_phone_nrs" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "TagsOptionsModel"
      }
    },
    "TagsRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/TagsOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/TagsFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "12"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "0"
        },
        "search_text" : {
          "type" : "string",
          "example" : "search text"
        }
      },
      "xml" : {
        "name" : "TagsRetrieveListArguments"
      }
    },
    "UsersFiltersModel" : {
      "xml" : {
        "name" : "UsersFiltersModel"
      }
    },
    "UsersModel" : {
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "31"
        }
      },
      "xml" : {
        "name" : "UsersModel"
      }
    },
    "UsersOptionsModel" : {
      "properties" : {
        "include_phone_nrs" : {
          "type" : "boolean",
          "example" : "true"
        }
      },
      "xml" : {
        "name" : "UsersOptionsModel"
      }
    },
    "UsersRetrieveListArguments" : {
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/UsersOptionsModel"
        },
        "filters" : {
          "$ref" : "#/definitions/UsersFiltersModel"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "12"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "0"
        },
        "search_text" : {
          "type" : "string",
          "example" : "search text"
        }
      },
      "xml" : {
        "name" : "UsersRetrieveListArguments"
      }
    }
  },
  "securityDefinitions" : {
    "api_key" : {
      "type" : "apiKey",
      "name" : "ApiKey",
      "in" : "header"
    }
  },
  "tags" : [ {
    "name" : "activity",
    "description" : "Activities"
  }, {
    "name" : "address-applied",
    "description" : "Address Applied"
  }, {
    "name" : "address",
    "description" : "Address"
  }, {
    "name" : "assignment",
    "description" : "Assignment"
  }, {
    "name" : "auto-plan",
    "description" : "Automatic Planning"
  }, {
    "name" : "driver",
    "description" : "Drivers"
  }, {
    "name" : "equipment",
    "description" : "Equipment"
  }, {
    "name" : "instant-messaging",
    "description" : "Instant Messaging"
  }, {
    "name" : "party",
    "description" : "Party"
  }, {
    "name" : "planner",
    "description" : "Planner"
  }, {
    "name" : "recurrence",
    "description" : "Recurrence"
  }, {
    "name" : "route",
    "description" : "Route"
  }, {
    "name" : "settings",
    "description" : "Settings"
  }, {
    "name" : "tags",
    "description" : "Tags"
  }, {
    "name" : "track-trace",
    "description" : "Track & Trace"
  }, {
    "name" : "users",
    "description" : "Users"
  }, {
    "name" : "worker",
    "description" : "Worker Stack"
  } ],
  "externalDocs" : {
    "description" : "General Info about Bumbal",
    "url" : "http://www.bumbal.eu/"
  }
}